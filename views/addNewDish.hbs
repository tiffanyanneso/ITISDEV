<!DOCTYPE html>
<html>
    <head>
        <title> New Dish </title>
        <meta name="description" content="New Dish">
        <meta name="keyword" content="New Dish">
        <link rel="stylesheet" type="text/css" href="../css/general.css">
        <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">
        <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
        <script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js"></script>
        <link href = "https://code.jquery.com/ui/1.10.4/themes/ui-lightness/jquery-ui.css" rel = "stylesheet">
        <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>   
    </head>
    <body>

        {{> logoutPartial }}
        {{> managerPartial }}
       

        <div class="content">
           <h1 style="margin-bottom: 0px;" class="bold color-blue">Add New Dish</h1>

           <hr>
            
            <div class="input-container">
                <div class="input-label"><label for="new-dish-name">Name</label></div>
                <div class="input-info-container"><input type="text" name="new-dish-name" id="new-dish-name" style="width: 100%"></div>
            </div>

            <p class="error" id="error-new-dish-name" style="margin-left: 20%;"></p>

            <div class="input-container">    
                <div class="input-label"><label for="new-dish-price">Price</label></div>
                <div class="input-info-container"><input type="number" min="0" name="new-dish-price" id="new-dish-price" style="width: 100%"></div>
            </div>

            <p class="error" id="error-new-dish-price" style="margin-left: 20%;"></p>

            <div class="input-container">
                <div class="input-label"> <label for="dropdown-add-new-dish-classification">Classification</label></div>
                <div class="input-info-container">
                    <select class="dropdown" id="dropdown-add-new-dish-classification">
                        {{#each classifications}}
                            <option value={{_id}}>{{name}}</option>
                        {{/each}}
                    </select>
                </div>
            </div>
            <div class="input-container">    
                <div class="input-label"> <label for="dropdown-add-new-dish-status">Status</label></div>
                <div class="input-info-container">
                    <select class="dropdown" id="dropdown-add-new-dish-status">
                        {{#each statuses}}
                            <option value={{_id}}>{{status}}</option>
                        {{/each}}
                    </select>
                </div>
            </div>

            <hr>

            <h3 class="bold">Ingredients</h3> 

            <!-- Modal -->
            <div class="modal fade" id="modal-add-ingredient" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                <div class="modal-dialog modal-dialog-centered" role="document">
                <div class="modal-content">
                  <div class="modal-header">
                    <h3 class="modal-title" id="exampleModalLongTitle">Add Ingredient</h3>
                    <button type="button" class="close" data-dismiss="modal" id="btn-close-add-new-ingredient" aria-label="Close">
                      <span aria-hidden="true">&times;</span>
                    </button>
                  </div>
                  <div class="modal-body">
                    <form id="add-new-ingredient">
                        <label for="ingredient-name">Name</label> <input id="ingredient-name" type="text"><br>
                        <p class="error" id="error-new-ingredient-name" style="margin-top: 3px; margin-bottom: 3px;"></p>
                        <label for="dropdown-ingredient-type">Ingredient Type</label>
                        <select class="dropdown" id="dropdown-ingredient-type"> 
                            <option value="no-selected">--Select ingredient type--</option>
                            {{#each ingredientTypes}}
                                <option value="{{_id}}">{{ingredientType}}</option>
                            {{/each}}
                        </select><br>
                        <label for="dropdown-ingredient-unit">Unit of Measurement</label>
                        <select class="dropdown" id="dropdown-ingredient-unit">
                            <option value="no-selected">--Select unit--</option>
                            {{#each units}}
                                <option value="{{id}}">{{unitName}}</option>
                            {{/each}}
                        </select><br>
                      </div>
                      <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" data-dismiss="modal" id ="btn-close-add-new-ingredient-2">Close</button>
                        <button type="button" class="btn btn-primary" id="btn-add-new-ingredient">Add Ingredient</button>
                      </div>
                  </form>
                </div>
              </div>
            </div>

            <div style="margin-top: 10px;"> 
                <input type="text" name="new-dish-ingredients-name" id="new-dish-ingredients-name" placeholder="Name" style="margin-right: 5px">
                <input type="number" name="new-dish-ingredients-quantity" id="new-dish-ingredients-quantity" placeholder="Quantity" style="margin-right: 10px">
                <select class="dropdown" id="dropdown-add-new-dish-ingredients-unit" style="margin-right: 10px">
                    {{#each units}}
                        <option value={{_id}}>{{unitName}}</option>
                    {{/each}}
                </select>

                <div class="modal fade" id="modal-add-conversion" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered" role="document">
                        <div class="modal-content">
                          <div class="modal-header">
                            <h3 class="modal-title" id="exampleModalLongTitle">Add Conversion</h3>
                            <button type="button" class="close" data-dismiss="modal" id="btn-close-add-conversion" aria-label="Close">
                              <span aria-hidden="true">&times;</span>
                            </button>
                          </div>
                          <div class="modal-body">
                                <p>Unit A must always be larger than Unit B</p>
                                <p>Unit B must always be smaller than Unit A</p>
                                <p id="p-ingredient-unit"></p>
                                <select class="dropdown" id="unitA" style="margin-right: 5px"> 
                                <option value="">Select Unit A</option>
                                {{#each units}}
                                    <option value={{_id}}>{{unitName}}</option>
                                {{/each}}
                                </select>

                                <select class="dropdown" id="unitB" style="margin-right: 10px">
                                <option value="">Select Unit B</option>
                                {{#each units}}
                                    <option value={{_id}}>{{unitName}}</option>
                                {{/each}}
                                </select>

                                <input type="number" name="ratio" id="ratio" placeholder="Ratio" style="margin-right: 10px">
                                <br>
                                 <p class="error" id="error-conversion"></p> 
            
                              <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal" id ="btn-close-add-conversion-2">Close</button>
                                <button type="button" class="btn btn-primary" id="btn-save-conversion">Save Conversion</button>
                              </div>
                        </div>
                      </div>
                    </div>
                </div>

                <div class="modal fade" id="modal-add-unit" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
                    <div class="modal-dialog modal-dialog-centered" role="document">
                        <div class="modal-content">
                          <div class="modal-header">
                            <h3 class="modal-title" id="exampleModalLongTitle">Add Conversion</h3>
                            <button type="button" class="close" data-dismiss="modal" id="btn-close-add-conversion" aria-label="Close">
                              <span aria-hidden="true">&times;</span>
                            </button>
                          </div>
                          <div class="modal-body">
                                <label for="unit">Unit</label>
                                <input type="text" name="unit" id="unit" placeholder="Unit">
                                <br>
                                <p class="error" id="error-unit"></p> 
            
                              <div class="modal-footer">
                                <button type="button" class="btn btn-secondary" data-dismiss="modal" id ="btn-close-add-conversion-2">Close</button>
                                <button type="button" class="btn btn-primary" id="btn-save-unit">Add Unit</button>
                              </div>
                        </div>
                      </div>
                    </div>
                </div>
                

                <input class="btn-add" type="button" id="btn-add-new-dish-ingredient" name="btn-add-new-dish-ingredient" value="+"> 
                <div class="div-btn-left" style="margin-top: 20px;">
                    <button class="btn-light-blue" id="btn-add-new-ingredient-popup" style="display: none;" data-toggle="modal" data-target="#modal-add-ingredient">Add New Ingredient</button>
                    <button class="btn-light-blue" id="add-single-unit" data-toggle="modal" data-target="#modal-add-unit">Add New Unit</button>
                    <button class="btn-light-blue" id="add-conversion" style="position:relative, left:20px, display: none;" data-toggle="modal" data-target="#modal-add-conversion">Add Conversion</button>
                </div>
            <p class="error" id="error-ingredients"></p>

            <div class="div-table" style="margin-top: 10px;">
                <table class="table" id="table-add-new-dish">
                    <thead class="table-head table-sticky-header">
                        <tr>
                            <th style="left">Name</th>
                            <th style="text-align: justify;">Quantity</th>
                            <th style="text-align:justify;">Unit</th>
                            <th></th>
                        </tr>
                    </thead>
                    <tbody> 
                    </tbody>
                </table>
            </div> 

            <div class="div-btn-right" style="margin-top: 20px;"><button class="btn-light-blue" id="btn-add-new-dish-save">Save</button></div>
            <div class="div-btn-right" style="margin-top: 10px;"><a href = "#"><button class="btn-light-blue" style="background-color: #B00000" id="btn-edit-dish-cancel" >Cancel</button></a></div>
        </div>

        <script> 
            $(document).ready(function() {

                $('#btn-edit-dish-cancel').click(function() {
                    location.href = 'dashboard';
                });

                $("#btn-add-new-ingredient-popup").hide();

                // Autocomplete for Ingredient Name
                $( "#new-dish-ingredients-name" ).autocomplete({
                    source:function(request, response) {
                    $.ajax({
                            url: `/getAutoIngredientName?query=${request.term}`,
                            dataType: "json",
                            data: {
                                //request.term refers to the value currently in the text input
                                term: request.term,
                            },
                            success: function (data) {
                                response(data);
                            }
                        });
                    }, 
                    
                    response: function (event, ui) {
                        
                        if (ui.content.length === 0) {
                                errorMessage("ingredientNameNotExist");
                                $("#btn-add-new-ingredient-popup").show();
                                

                            
                            
                            $("#btn-close-add-new-ingredient , #btn-close-add-new-ingredient-2").click(function() {
                                  $("#btn-add-new-ingredient-popup").hide();
                            });
                            
                        }

                        else{
                           
                            $("#new-dish-ingredients-name").css("border", "1px solid #DDDDDD");
                            $("#error-ingredients").text("");
                        }

                    }
                    
                });

                function noSelected() {
                    var ingredientType = $('#dropdown-ingredient-type').val();
                    var ingredientUnit = $('#dropdown-ingredient-unit').val();
                    if (ingredientType == "no-selected" || ingredientUnit == "no-selected")
                        return true;
                    else
                        return false;
                }

                // INPUT VALIDATION- DISH
                function dishNameValidation(dishName) {
                    if (dishName == null || dishName == "") {
                        errorMessage("dishName");
                        return 1;
                    }
                    else 
                        return 0;
                }

                function dishPriceValidation(dishPrice) {
                    if (dishPrice == null || dishPrice == "") {
                        errorMessage("dishPrice");
                        return 1;
                    }
                    else 
                        return 0;
                }

                // INPUT VALIDATION- INGREDIENT
                function ingredientNameValidation(ingredientName) { 
                    if (ingredientName == null || ingredientName == "") {
                        errorMessage("ingredientName");
                        return 1;
                    } 
                    else 
                        return 0;
                }

                function ingredientQuantityValidation(ingredientQty) { 
                    if (ingredientQty == null || ingredientQty == "") {
                        errorMessage("ingredientQty");
                        return 1;
                    } else if (parseFloat(ingredientQty) <= 0) {
                        errorMessage("ingredientQtyInvalid");
                        return 1;
                    }
                    else 
                        return 0;
                }

                function errorMessage(type) {
                    if (type == "dishName") {
                        $("#new-dish-name").css("border", "1px solid #B00000");
                        $("#error-new-dish-name").text("Please enter a Dish Name.");
                    } else if (type == "dishPrice") {
                        $("#new-dish-price").css("border", "1px solid #B00000");
                        $("#error-new-dish-price").text("Please enter a Dish Price.");
                    } else if (type == "ingredientQty") {
                        $("#new-dish-ingredients-quantity").css("border", "1px solid #B00000");
                        $("#error-ingredients").text("Please enter the Ingredient Quantity.");
                    } else if (type == "ingredientName") {
                        $("#new-dish-ingredients-name").css("border", "1px solid #B00000");
                        $("#error-ingredients").text("Please enter an Ingredient Name.");
                    } else if (type == "ingredientNameNotExist") {
                        $("#new-dish-ingredients-name").css("border", "1px solid #B00000");
                        $("#error-ingredients").text("Ingredient does not exist.");
                    } else if (type == "ingredientQtyInvalid") {
                        $("#new-dish-ingredients-quantity").css("border", "1px solid #B00000");
                        $("#error-ingredients").text("Invalid quantity.");
                    } 
                }

                function capitalize(string) {
                    var words = string.toLowerCase().split(' ');
                    for (var i = 0; i < words.length; i++)
                        words[i] = words[i].charAt(0).toUpperCase() + words[i].substring(1);
                    return words.join(' ');
                };

                
                $('#new-dish-name').keyup(function () { 
                    // Get value 
                     var dishName = capitalize($('#new-dish-name').val());

                    // Check if dish name exists 
                    $.get("/getCheckDishName", {dishName: dishName}, function (result) {
                        if (result.dishName == dishName) {
                            $("#new-dish-name").css("border", "1px solid #B00000");
                            $("#error-new-dish-name").text("Dish Name already taken.");
                            $("#btn-add-new-dish-save").prop("disabled", true);
                            $("#btn-add-new-dish-save").css("background-color", "#b3b3b3");
                        } else {
                            $("#new-dish-name").css("border", "1px solid #DDDDDD");
                            $("#error-new-dish-name").text("");
                            $("#btn-add-new-dish-save").prop("disabled", false);
                            $("#btn-add-new-dish-save").css("background-color", "#0F84D9");
                        }
                    });
                });

                // Reset dish fields
                function resetDish() {
                    $("#new-dish-name").val("");
                    $("#new-dish-price").val("");
                    $("#dropdown-add-new-dish-classification")[0].selectedIndex = 0; 
                    $("#dropdown-add-new-dish-status")[0].selectedIndex = 0; 
                }
                
                // Reset ingredient fields
                function resetIngredients() {
                    $("#new-dish-ingredients-name").val("");
                    $("#new-dish-ingredients-quantity").val("");
                    $("#dropdown-add-new-dish-ingredients-unit")[0].selectedIndex = 0; 
                }

                $('#dropdown-add-new-dish-ingredients-unit').change(function() {
                    var ingredientName = capitalize($('#new-dish-ingredients-name').val());
                    ingredientName = $.trim(ingredientName);
                    var unit = $('#dropdown-add-new-dish-ingredients-unit').val();
                    $.get('/checkUnitConverter', {unit, ingredientName}, function(result) {
                        //conversion was not found
                        if (result != null) {
                            $('#add-conversion').css('display', 'block')
                            $('#p-ingredient-unit').text(`The ingredient unit is ${result}`)
                        } 
                        else {
                            $('#add-conversion').css('display', 'none')
                            $('#p-ingredient-unit').text('')
                        }
                    });
                });


                $('#dropdown-ingredient-type').change(function() {
                    if (!noSelected()) {
                        $("#btn-add-new-ingredient").prop("disabled", true);
                        $("#btn-add-new-ingredient").css("background-color", "#b3b3b3");
                    }
                    else {
                        $("#btn-add-new-ingredient").prop("disabled", false);
                        $("#btn-add-new-ingredient").css("background-color", "#0F84D9");
                    }
                });

                $('#dropdown-ingredient-unit').change(function() {
                    if (!noSelected()) {
                        $("#btn-add-new-ingredient").prop("disabled", true);
                        $("#btn-add-new-ingredient").css("background-color", "#b3b3b3");
                    }
                    else {
                        $("#btn-add-new-ingredient").prop("disabled", false);
                        $("#btn-add-new-ingredient").css("background-color", "#0F84D9");
                    }
                });  


                $('#ingredient-name').keyup(function() {
                    var ingredientName = capitalize($('#ingredient-name').val());
                    $.get('/getCheckIngredientName', {ingredientName: ingredientName}, function (result) {
                            if (result.ingredientName == ingredientName) {
                                $("#ingredient-name").css("border", "1px solid #B00000");
                                $('#error-new-ingredient-name').text("Ingredient already exists");
                                $("#btn-add-new-ingredient").prop("disabled", true);
                                $("#btn-add-new-ingredient").css("background-color", "#b3b3b3");
                            }

                            //result name is not equal but no selected yet
                            else if (result.ingredientName != ingredientName && noSelected()) {
                                $("#ingredient-name").css("border", "1px solid #DDDDDD");
                                $("#error-new-ingredient-name").text("");
                                $("#btn-add-new-ingredient").prop("disabled", true);
                                $("#btn-add-new-ingredient").css("background-color", "#b3b3b3");
                            }

                            else {
                                $("#ingredient-name").css("border", "1px solid #DDDDDD");
                                $("#error-new-ingredient-name").text("");
                                $("#btn-add-new-ingredient").prop("disabled", false);
                                $("#btn-add-new-ingredient").css("background-color", "#0F84D9");
                            }
                    });
                });

                 $('#btn-add-new-ingredient').click(function() {
                    var ingredientName = capitalize($('#ingredient-name').val());
                    var ingredientName = $.trim(ingredientName);
                    var ingredientTypeVal = $('#dropdown-ingredient-type').val();
                    var ingredientTypeText = $('#dropdown-ingredient-type :selected').text();
                    var ingredientUnitVal = $('#dropdown-ingredient-unit').val();
                    var ingredientUnitText = $('#dropdown-ingredient-unit :selected').text();


                    $('#modal-add-ingredient').modal('toggle');
                    $('#add-new-ingredient').trigger('reset');

                    $.get('/getCheckIngredientName', {ingredientName: ingredientName}, function (result) {
                    if (result.ingredientName == ingredientName) {
                        
                        $("#ingredient-name").css("border", "1px solid #B00000");
                        $('#error-new-ingredient-name').text("Ingredient already exists");
                        
                        $("#btn-add-new-ingredient").prop("disabled", true);
                        $("#btn-add-new-ingredient").css("background-color", "#b3b3b3");
                        
                        //another modal popup saying it exists
                        alert(ingredientName + " already exists as an ingredient");
                    }

                    else{
                      $.ajax({
                            url: "/addIngredient",              
                            type: "POST",
                            data: {'ingredientName': ingredientName,'ingredientType': ingredientTypeVal, 'ingredientUnitVal': ingredientUnitVal},
                            async:false,
                            success: function(result){
 
                                alert("New Ingredient Added");
                            }
                        });
                    } 
                    
                });
     
                });



                $('#btn-add-new-dish-ingredient').click(function() {
                    var ingredientName = capitalize($('#new-dish-ingredients-name').val());
                        ingredientName = $.trim(ingredientName);
                    var ingredientQty = $('#new-dish-ingredients-quantity').val();
                    var ingredientUnit = $('#dropdown-add-new-dish-ingredients-unit option:selected').text();
                    var ingredientUnitID = $('#dropdown-add-new-dish-ingredients-unit option:selected').val();

                    // Call validation functions
                    if (!ingredientNameValidation(ingredientName) && !ingredientQuantityValidation(ingredientQty)) {
                        $("#new-dish-ingredients-quantity").css("border", "1px solid #DDDDDD");
                        $("#new-dish-ingredients-name").css("border", "1px solid #DDDDDD");
                        $("#error-ingredients").text("");

                        // Check if ingredient name is valid
                        $.get("/getCheckIngredientName", {ingredientName: ingredientName}, function (result) {
                            if (result.ingredientName != ingredientName) {
                                errorMessage("ingredientNameNotExist");
                            } else {
                                // Clear error messages
                                $("#new-dish-ingredients-name").css("border", "1px solid #DDDDDD");
                                $("#error-ingredients").text("");

                                // Append row to table
                                $('#table-add-new-dish').find('tbody').append(
                                    `  <tr> 
                                            <td>${ingredientName}</td> 
                                            <td style="text-align:justify;">${ingredientQty}</td> 
                                            <td value="${ingredientUnitID}" style="text-align:justify;">${ingredientUnit}</td>
                                            <td> <button class="delete-button add-new-dish-delete-btn"><img src="../images/delete-icon.png" height="20px" width="15x" alt="Delete"></button> </td>
                                        </tr>`
                                    );

                                resetIngredients();
                            }
                        });
					}
                });

                $("#table-add-new-dish").on('click','.add-new-dish-delete-btn',function() {
                    $(this).closest('tr').remove();
                });

                function readTable(dishID) { 
                    var ingredients = [];

                    //alert("READ TABLE " + dishID);

                    var myTab = $("#table-add-new-dish")[0];

                    //alert(myTab.rows.length);

                    // LOOP THROUGH EACH ROW OF THE TABLE AFTER HEADER.
                    for (var i = 1; i < myTab.rows.length; i++) {
                         var ingredientID;

                        // GET THE CELLS COLLECTION OF THE CURRENT ROW.
                        var objCells = myTab.rows.item(i).cells;

                        //alert(objCells.item(0).innerHTML + " " + objCells.item(1).innerHTML + " " + objCells.item(2).innerHTML);

                        var name = objCells.item(0).innerHTML; 
                        var quantity = parseFloat(objCells.item(1).innerHTML);
                        var unit = objCells.item(2).innerHTML;

                        //alert(dishID + " " + name + " " + parseFloat(quantity) + " " + unit;   
                        var ingredient = {
                            dishID: dishID,
                            ingredientID: objCells.item(0).innerHTML,
                            quantity: parseFloat(objCells.item(1).innerHTML),
                            unitMeasurement: objCells.item(2).innerHTML
                        };

                        //console.log(ingredient);

                        ingredients.push(ingredient);  
                    }

                    var JSONIngredients = JSON.stringify(ingredients);

                    var location = "addNewDish";

                    $.ajax({
                            url: "/postAddIngredients",              
                            type: "POST",
                            data: {JSONIngredients, location, dishID},
                            async: false,
                            success: function(result){
                                window.location.assign('/menu');
                            }
                    });      
                }

                $('#btn-add-new-dish-save').click(function() {
                    var dishName = capitalize($('#new-dish-name').val());
                    var dishName = $.trim(dishName);
                    var dishPrice = $('#new-dish-price').val();
                    var dishClassification = $('#dropdown-add-new-dish-classification').val();
                    var dishStatus = $('#dropdown-add-new-dish-status').val();
                    var dishID;

                    //alert(dishName + ", " + dishPrice + ", " + dishClassification + ", " + dishStatus);
                    
                    // Validate inputs
                    if (!dishNameValidation(dishName) && !dishPriceValidation(dishPrice)) {
                        $("#new-dish-name").css("border", "1px solid #DDDDDD");
                        $("#new-dish-price").css("border", "1px solid #DDDDDD");

                        $("#error-new-dish-name").text("");
                        $("#error-new-dish-price").text("");

                        resetDish();

                        $.get('/postAddDish', {dishName: dishName, dishPrice: dishPrice, dishClassification: dishClassification, dishStatus: dishStatus}, function(result) {
                            dishID = result._id;
                            
                            readTable(dishID);
                        });
					}
                });

                var number = document.getElementById('new-dish-price');

                number.onkeydown = function(e) {
                    if(!((e.keyCode > 95 && e.keyCode < 106)
                    || (e.keyCode > 47 && e.keyCode < 58) 
                    || e.keyCode == 8)) {
                        return false;
                    }
                }

                function noSelected(){

                    var unitA = $('#unitA').val();
                    var unitB = $('#unitB').val();

                    if($('#unitA').val() == '' || $('#unitB').val() == ''){
                        return true;

                    }

                    else{
                        return false;
                    }
                }

                function sameUnit() {

                    var unitA = $('#unitA').val();
                    var unitB = $('#unitB').val();

                    if(unitA == unitB){
                        return true;
                    }

                    else if(unitA != unitB){
                        return false;
                    }
                }

                function ratioValidation(){

                    var ratio = $('#ratio').val();
                    if(ratio < 0 || ratio == ''){
                        return true;
                    }

                    else{
                        return false;
                    }
                }

                $('#btn-save-conversion').click(function() {
                    if(!noSelected() && !sameUnit() && !ratioValidation()){

                        $('#error-conversion').text("Unit Conversion has been saved");
                        $("#error-conversion").css("margin-left", "0px");
                        $("#error-conversion").css("color", "#008000");

                        var unitA = $('#unitA').val();
                        var unitB = $('#unitB').val();
                        var ratio = $('#ratio').val();

                        $.post('/saveUnitConvert', {unitA, unitB, ratio});
                    }
                    else{
                        $('#error-conversion').text("Invalid input for unit or ratio").delay(2300).fadeOut();;
                        $("#error-conversion").css("margin-left", "0px");
                        $("#error-conversion").css("color", "#B00000");

                    }
                });

                $('#unit').keyup(function(){
                    var unit = $('#unit').val();
                    $.get('/getCheckUnitName', {unit}, function (result) {
                        if (result!="")
                            $('#error-unit').text('Unit already exists');
                        else
                            $('#error-unit').text('')
                    })
                })

                $('#btn-save-unit').click(function() {
                    var unit = capitalize($('#unit').val());

                    $.post('/addDishUnit', {unit}, function (result) {
                        $('#unit').val('')
                        $('#modal-add-unit').modal('hide');

                        $('#dropdown-add-new-dish-ingredients-unit').append(`
                            <option value="${result._id}">${result.unit}</option>`)
                    })
                });
                        
        });
        </script>

    </body>
</html>